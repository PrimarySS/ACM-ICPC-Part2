/*
题目描述

某国为了防御敌国的导弹袭击，发展出一种导弹拦截系统。但是这种导弹拦截系统有一个缺陷：
虽然它的第一发炮弹能够到达任意的高度，但是以后每一发炮弹都不能高于前一发的高度。某天，
雷达捕捉到敌国的导弹来袭。由于该系统还在试用阶段，所以只有一套系统，因此有可能不能拦截所有的导弹。

输入导弹依次飞来的高度（雷达给出的高度数据是不大于50000的正整数），计算这套系统最多能拦截多少导弹，
如果要拦截所有导弹最少要配备多少套这种导弹拦截系统。

输入输出格式

输入格式：
一行，若干个整数（个数少于100000）

输出格式：
2行，每行一个整数，
第一个数字表示这套系统最多能拦截多少导弹，
第二个数字表示如果要拦截所有导弹最少要配备多少套这种导弹拦截系统。

输入输出样例

输入样例#1：							输出样例#1：
389 207 155 300 299 170 158 65			6
										2
*/

#include<iostream>
using namespace std;

int main()
{
	int missile[100000],max[100000];

	//输入导弹的高度
	int n = -1;
	while(cin >> missile[++n]);
	//统计一套导弹拦截系统能拦截的导弹
	for(int i = 0; i < n; i++){
		for(int j = i + 1; j < n; j++){
			if(missile[j] > missile[i] && missile[j] > max[i]){
				if(max[i] != max[i-1])max[i] = missile[j];
			}
			else{
				if(max[i] != max[i-1])max[i] = missile[i];
			}
		}
		cout << max[i] << " ";
	}

	cout << endl;
	
	return 0;
}

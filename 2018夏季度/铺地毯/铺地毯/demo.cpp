/*
题目描述

为了准备一个独特的颁奖典礼，组织者在会场的一片矩形区域（可看做是平面直角坐标系的第一象限）
铺上一些矩形地毯。一共有 n 张地毯，编号从 1 到n 。现在将这些地毯按照编号从小到大的顺序平行
于坐标轴先后铺设，后铺的地毯覆盖在前面已经铺好的地毯之上。

地毯铺设完成后，组织者想知道覆盖地面某个点的最上面的那张地毯的编号。
注意：在矩形地毯边界和四个顶点上的点也算被地毯覆盖。

输入输出格式

输入格式
输入共n+2 行。
第一行，一个整数n ，表示总共有 n 张地毯。
接下来的n 行中，第 i+1 行表示编号i 的地毯的信息，包含四个正整数 a ，b ，g ，k ，
每两个整数之间用一个空格隔开，分别表示铺设地毯的左下角的坐标（a ，b ）以及地毯在
x轴和y 轴方向的长度。第n+2 行包含两个正整数 x 和y，表示所求的地面的点的坐标（x ，y）。

输出格式：
输出共1 行，一个整数，表示所求的地毯的编号；若此处没有被地毯覆盖则输出-1 。

输入输出样例

输入样例#1：				输出样例#1：
3							3
1 0 2 3
0 2 3 3
2 1 3 3
2 2
【数据范围】

对于30% 的数据，有 n ≤2 ；

对于50% 的数据，0 ≤a, b, g, k≤100；

对于100%的数据，有 0 ≤n ≤10,000 ，0≤a, b, g, k ≤100,000。
*/

#include<iostream>
using namespace std;

int main()
{
	int a[10000],b[10000],x[10000],y[10000],xi,yi,n;
	//输入地毯的张数
	cin >> n;
	//输入地毯的左下角坐标和x,y方向上的长度
	for(int i  = 1; i <= n; i++)
	{
		cin >> a[i] >> b[i] >> x[i] >> y[i];
	}
	//输入所求点
	cin >> xi >> yi;
	for(int i = n; i > 0; i--)
	{
		if(a[i] <= xi && a[i] + x[i] >= xi && b[i] <= yi && b[i] + y[i] >= yi)
		{
			cout << i << endl;
			return 0;
		}
	}
	cout << -1 << endl;
	return 0;
}

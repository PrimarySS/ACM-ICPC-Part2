/*
题目描述

丽江河边有n 家很有特色的客栈，客栈按照其位置顺序从 1 到n 编号。每家客栈都按照某一种色调进行装饰
（总共 k 种，用整数 0 ~ k-1 表示），且每家客栈都设有一家咖啡店，每家咖啡店均有各自的最低消费。

两位游客一起去丽江旅游，他们喜欢相同的色调，又想尝试两个不同的客栈，因此决定分别住在色调相同的两家客栈中。
晚上，他们打算选择一家咖啡店喝咖啡，要求咖啡店位于两人住的两家客栈之间（包括他们住的客栈），
且咖啡店的最低消费不超过 p 。

他们想知道总共有多少种选择住宿的方案，保证晚上可以找到一家最低消费不超过 p元的咖啡店小聚。

输入输出格式

输入格式：
共n+1 行。
第一行三个整数n ，k ，p，每两个整数之间用一个空格隔开，分别表示客栈的个数，色调的数目和能接受的
最低消费的最高值；
接下来的n 行，第 i+1 行两个整数，之间用一个空格隔开，分别表示 i 号客栈的装饰色调和i 号客栈的咖啡店
的最低消费。

输出格式：
输出只有一行，一个整数，表示可选的住宿方案的总数。

输入输出样例

输入样例#1：				输出样例#1：
5 2 3						3
0 5 
1 3 
0 2 
1 4 
1 5 
*/

#include<iostream>
using namespace std;

int main()
{
	int n,k,p,color[100],pay[100],kind = 0;
	//输入客栈的总数,色调的种类和咖啡店的最低消费
	cin >> n >> k >> p;
	//输入每间客栈的色调和咖啡店的最低消费
	for(int i = 1; i <= n; i++)
	{
		cin >> color[i] >> pay[i];
	}
	//算出所有种类
	for(int i = 1; i <= n; i++)
	{
		for(int j = i + 1; j <= n; j++)
		{
			if(color[i] == color[j] && (pay[i] <= p || pay[j] <= p))
				kind ++;
		}
	}
	cout << kind << endl;
	return 0;
}



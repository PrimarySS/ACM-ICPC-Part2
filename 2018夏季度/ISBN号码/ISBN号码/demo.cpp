/*
题目描述

每一本正式出版的图书都有一个ISBN号码与之对应，ISBN码包括9位数字、1位识别码和3位分隔符，
其规定格式如“x-xxx-xxxxx-x”，其中符号“-”就是分隔符（键盘上的减号），最后一位是识别码，
例如0-670-82162-4就是一个标准的ISBN码。ISBN码的首位数字表示书籍的出版语言，例如0代表英语；
第一个分隔符“-”之后的三位数字代表出版社，例如670代表维京出版社；第二个分隔符后的五位数字
代表该书在该出版社的编号；最后一位为识别码。

识别码的计算方法如下：

首位数字乘以1加上次位数字乘以2……以此类推，用所得的结果mod 11，所得的余数即为识别码，
如果余数为10，则识别码为大写字母X。例如ISBN号码0-670-82162-4中的识别码4是这样得到的：
对067082162这9个数字，从左至右，分别乘以1，2，...,9,再求和，即0×1+6×2+……+2×9=158，
然后取158 mod 11的结果4作为识别码。

你的任务是编写程序判断输入的ISBN号码中识别码是否正确，如果正确，则仅输出“Right”；如果错误，
则输出你认为是正确的ISBN号码。

输入输出格式

输入格式：
是一个字符序列，表示一本书的ISBN号码（保证输入符合ISBN号码的格式要求）。

输出格式：
假如输入的ISBN号码的识别码正确，那么输出“Right”，否则，按照规定的格式，
输出正确的ISBN号码（包括分隔符“-”）。

输入输出样例

输入样例#1：				输出样例#1：
0-670-82162-4				Right

输入样例#2：				输出样例#2：
0-670-82162-0				0-670-82162-4
*/

#include<iostream>
using namespace std;
int sum = 0,k = 1,check;
char a[14];

//输入ISBN码
void get_in(){
	for(int i = 1; i <=12; i++){
		cin >> a[i];
		//当输入是整数时直接加起来
		if(a[i] != '-'){
			//(a[i] - '0')转换为int型的a[i]地址上的整数
			sum = sum + (a[i] - '0') * k;
			k++;
		}
	}
	//单独处理识别号为X的情况
	cin >> a[13];
	//识别号不为为X时余数为a[13]
	if(a[13] != 'X'){
		check = a[13] -'0';
	}
	//识别号为X时余数为10
	else check = 10;
}

//输出ISBN码
void get_out(){
	if(sum % 11 == check){
			cout << "Right" << endl;
		}
	//若余数不符合重新输出正确的ISBN码
	else{
		for(int i =1; i <=12; i++) cout << a[i];
		if(check != 10) cout << sum % 11 << endl;
		else cout << "X" << endl;
	}
}

int main()
{
	get_in();
	get_out();
	return 0;
}


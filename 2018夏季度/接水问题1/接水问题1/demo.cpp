/*
题目描述

学校里有一个水房，水房里一共装有m 个龙头可供同学们打开水，每个龙头每秒钟的供水量相等，均为1。
现在有n名同学准备接水，他们的初始接水顺序已经确定。将这些同学按接水顺序从1到n 编号，
i 号同学的接水量为wi。接水开始时，1 到m 号同学各占一个水龙头，并同时打开水龙头接水。
当其中某名同学j 完成其接水量要求wj 后，下一名排队等候接水的同学k马上接替j 同学的位置开始接水。
这个换人的过程是瞬间完成的.且没有任何水的浪费.即j同学第x秒结束时完成接水,
则k同学第x+1秒立刻开始接水。若当前接水人数n不足m，则只有n个龙头供水，其它m−n个龙头关闭。
现在给出n 名同学的接水量，按照上述接水规则，问所有同学都接完水需要多少秒。

【输入输出样例1】
5 3
4 4 1 2 1
4

【输入输出样例2】
8 4
23 71 87 32 70 93 80 76
163

输入
第1 行2 个整数n 和m，用一个空格隔开，分别表示接水人数和龙头个数。
第2 行n 个整数w1、w2、……、wn，每两个整数之间用一个空格隔开，wi 表示i 号同学的接水量。

输出
输出只有一行，1 个整数，表示接水所需的总时间。

提示
1 ≤ n ≤ 10000，1 ≤m≤ 100 且m≤ n；1 ≤ wi ≤ 100。
*/

#include<iostream>
using namespace std;

int main()
{
	int n,m,wi[10001],i = 1;;
	//输入学生人数n和水龙头的个数m
	cin >> n >> m;
	//输入n个同学的分别装水值
	while(i <= n){
		cin >> wi[i];
		i++;
	}

	//计算完成接水的总时间
	//定义时间变量//定义已完成接水的学生//定义下一个接水的同学
	int s = 0,fstu = 0,now = m + 1;
	while(fstu < n){
		int j = 1;
		while(j <= m){
			wi[j]--;
			if(wi[j] == 0){
				fstu++;
				wi[j] = wi[now];//下一个同学开始接水
				wi[now] = 0;
				if(now != n)now ++;
			}
			j++;
		}
		s++;
	}
	cout << s << endl;
	return 0;
}


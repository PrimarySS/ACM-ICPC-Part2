/*
题目描述

每个月的月初妈妈给津津300元钱
储蓄计划：
月末手中还会有多于100元或恰好100元,把整百的钱存在妈妈那里,剩余的钱留在自己手中。
到了年末她会加上20％还给津津。

例如11月初津津手中还有83元，妈妈给了津津300元。津津预计11月的花销是180元，
那么她就会在妈妈那里存200元，自己留下183元。到了11月月末，津津手中会剩下3元钱。

津津发现这个储蓄计划的主要风险是，存在妈妈那里的钱在年末之前不能取出。
有可能在某个月的月初，津津手中的钱加上这个月妈妈给的钱，不够这个月的原定预算。
如果出现这种情况，津津将不得不在这个月省吃俭用，压缩预算。

现在请你根据2004年1月到12月每个月津津的预算，判断会不会出现这种情况。如果不会，
计算到2004年年末，妈妈将津津平常存的钱加上20％还给津津之后，津津手中会有多少钱。

输入输出格式

输入格式：
每行包含一个小于350的非负整数，分别表示1月到12月津津的预算。

输出格式：
如果储蓄计划实施过程中出现某个月钱不够用的情况，输出-X，X表示出现这种情况的第一个月；
否则输出到2004年年末津津手中会有多少钱。

输入输出样例

输入样例#1：	输出样例#1：			输入样例#2：	输出样例#2：
290				-7						290				1580	
230										230				
280										280
200										200 
300										300
170										170 
340										330 
50										50 
90										90
80										80
200										200 
60										60
*/

#include<iostream>
using namespace std;

int main()
{
	int monthBudget[12];
	//存入每个月的支出预算
	for(int i = 0; i < 12; i++)
	{
		cin >> monthBudget[i];
	}

	int balance = 0,starDeposit = 0,endDeposit = 0;
	double totalDeposit = 0;
	for(int j = 0; j < 12; j++)
	{
		balance = balance + 300 - monthBudget[j];//扣除支出后的余额
		//余额为负数时跳出循环
		if(balance < 0)
		{
			cout << -(j + 1) << endl;
			break;
		}
		//余额大于100时，把整百储存到妈妈中
		else if(balance >= 100)
		{
			starDeposit = (balance / 100) * 100;//半月剩下的总的整百
			balance = balance - starDeposit;//扣除储存后的余额
			endDeposit = endDeposit + starDeposit;//储存总的整百
			totalDeposit = endDeposit * 1.2 + balance;//一年取出时的总额
		}
		//如果每月都没有超出预算，输出一年的总额
		if(j == 11 && balance >= 0)
			cout << totalDeposit << endl;
	}
	return 0;
}
